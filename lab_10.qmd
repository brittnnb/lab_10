---
title: 'Lab 10: Distances and the Border Zone'
author: 'Brittany Bobb'
date: '2025-04-24'
format: 
    html:
      self-contained: true
execute:
  echo: true
editor: source
subtitle: 'Ecosystem Science and Sustainability 523c'
---

```{r}
# spatial data science
library(tidyverse)
library(sf)
library(units)

# Visualization
library(gghighlight)
library(ggrepel)
library(knitr)
library(flextable)

```

```{r}
#| echo: true
library(remotes)
remotes::install_github("ropensci/USAboundaries")
```

```{r}
#| echo: true
remotes::install_github("ropensci/USAboundariesData")
```

```{r}
#| echo: true
remotes::install_github("ropenscilabs/rnaturalearthdata")
```

```{r}
eqdc <- st_crs(5070) #sets the variable eqdc to the CRS with EPSG code 5070, which corresponds to EPSG:5070 - NAD83/ Conus Albers 
```

```{r}
states <- USAboundaries::us_states(resolution = "low") |>
  filter(!state_abbr %in% c("HI", "AK","PR")) |>
  st_transform(eqdc)
```

```{r}
#USA State Boundaries 
countries <- rnaturalearthdata::countries110 |>
  st_transform(eqdc)
```

```{r}
#Remove the cities 
library(readr)
cities <- read_csv("data/uscities.csv", show_col_types = FALSE) |>
  st_as_sf(coords = c("lng", "lat"), crs = 4326) |>
  st_transform(eqdc)

```

```{r}
#
# Question 2 
#

```

```{r}
# 2.1 Distance to USA Border (km)
us <- st_union(states) |> #merges geometries 
  st_cast("MULTILINESTRING") |> #changes the geometry type of spatial features 
  st_as_sf()
  
cities <- cities %>%
  #st_filter(st_union(states)) %>% #filter spatial features based on their spatial relationship to another greometry 
  mutate(distance_to_us_border = 
           set_units(st_distance(geometry, us), "km")) %>%
            drop_units()

cities_selected <- cities |>
  select (city, state_name, distance_to_us_border) 

farthest_cities <- cities_selected |> 
  arrange(desc(distance_to_us_border)) 
  
#flextable
farthest_cities |>
  slice_head(n = 5)|>
  flextable() |>
  set_header_labels(city = "City", state_name = "State", distance_to_us_border = "Distance ") |> 
  colformat_num(j = "distance_to_us_border", digits = 2) |> 
  autofit()

```

```{r}
# 2.2 Distance to States (km)


```

```{r}
# 2.3 Distance to Mexico (km)
# For 2.3 we are interested in calculating the distance of each city to the Mexican border. To do this we need to isolate Mexico from the country objects. In addition to storing this data as part of the cities data.frame, produce a table (flextable) documenting the five cities farthest from a state border. Include only the city name, state, and distance.


```

```{r}
# 2.4 Distance to Canada (km) 
# For 2.4 we are interested in calculating the distance of each city to the Canadian border. To do this we need to isolate Canada from the country objects. In addition to storing this data as part of the cities data.frame, produce a table (flextable) documenting the five cities farthest from a state border. Include only the city name, state, and distance.

```

```{r}
#
#Question 3
#

```

```{r}
# 3.1 Data
# Show the 3 continents, CONUS outline, state boundaries, and 10 largest USA cities (by population) on a single map

library(ggplot2)
na <- filter(countries, admin %in% c("Mexico", "Canada", "United States of America")) |>
  st_as_sf()

big_cities<- cities |>
  slice_max(population, n = 10)

ggplot() +
  geom_sf(data = na, fill = "grey") +
  geom_sf(data = states, fill = "white", lty = 2, size = 0.5) +
  geom_sf(data = big_cities, color = 'red', size = 0.5) +
  ggrepel::geom_label_repel(data = big_cities, aes(geometry = geometry, label = city, 
                                                   label.size = .1), stat = "sf_coordinates") +
  theme_void()
  
```

```{r}
#3.2 City Distance from the Border
#Create a map that colors USA cities by their distance from the national border. In addition, re-draw and label the 5 cities that are farthest from the border.
library(ggrepel)
library(viridis)

five_farthest <- cities |>
  slice_max(distance_to_us_border, n = 5)

ggplot() +
  geom_sf(data = st_union(states), fill = "grey", lty = 2, size = 0.5) +
  
  geom_sf(data = cities, aes(color = as.numeric(distance_to_us_border)),
          size = 0.5) +
  geom_sf(data = five_farthest, color = 'red', size = 0.7) +
  ggrepel::geom_label_repel(data = five_farthest,
                            aes(geometry = geometry, label = city, 
                                label.size = 0.1),
                            stat = "sf_coordinates") +
  scale_color_viridis_c(limits = c(0, 1000),              # stretch to 1000 km for smoother gradation
    oob = scales::squish) +
  theme_void() +
  theme(legend.position = "bottom") +
  labs(color = "Distance to Border (km)")
```

```{r}
#3.3 City Distance from Nearest State
#Create a map that colors USA cities by their distance from the nearest state border. In addition, re-draw and label the 5 cities that are farthest from any border.


```

```{r}
#3.4 Equidistance boundary from Mexico and Canada
#Here we provide a little more challenge. Use gghighlight to identify the cities that are equal distance from the Canadian AND Mexican border 100 km.In addition, label the five (5) most populous cites in this zone.Hint: (create a new variable that finds the absolute difference between the distance to Mexico and the distance to Canada)


```

```{r}
#
#Question 4
#

```

